% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map.R
\name{MaplibreMap}
\alias{MaplibreMap}
\title{MaplibreMap: R6 class for interactive Maplibre maps in Shiny}
\description{
MaplibreMap: R6 class for interactive Maplibre maps in Shiny

MaplibreMap: R6 class for interactive Maplibre maps in Shiny
}
\note{
This does not remove the layer, it only hides it from view.
Show a previously hidden layer on the map.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{session}}{The Shiny session object.}

\item{\code{widget}}{The htmlwidget object for the map.}

\item{\code{id}}{The unique map element ID.}

\item{\code{maxZoom}}{The maximum zoom level.}

\item{\code{mapTilerApiKey}}{API key for MapTiler.}

\item{\code{arcGisApiKey}}{API key for ArcGIS.}

\item{\code{mapboxApiKey}}{API key for Mapbox.
Create a new MaplibreMap object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-maplibReGL-new}{\code{MaplibreMap$new()}}
\item \href{#method-maplibReGL-set_mapTiler_api_key}{\code{MaplibreMap$set_mapTiler_api_key()}}
\item \href{#method-maplibReGL-set_arcGis_api_key}{\code{MaplibreMap$set_arcGis_api_key()}}
\item \href{#method-maplibReGL-set_mapbox_api_key}{\code{MaplibreMap$set_mapbox_api_key()}}
\item \href{#method-maplibReGL-set_tile_layer}{\code{MaplibreMap$set_tile_layer()}}
\item \href{#method-maplibReGL-set_zoom}{\code{MaplibreMap$set_zoom()}}
\item \href{#method-maplibReGL-set_bounds}{\code{MaplibreMap$set_bounds()}}
\item \href{#method-maplibReGL-ui}{\code{MaplibreMap$ui()}}
\item \href{#method-maplibReGL-add_source}{\code{MaplibreMap$add_source()}}
\item \href{#method-maplibReGL-add_feature_server_source}{\code{MaplibreMap$add_feature_server_source()}}
\item \href{#method-maplibReGL-add_image}{\code{MaplibreMap$add_image()}}
\item \href{#method-maplibReGL-set_source_data}{\code{MaplibreMap$set_source_data()}}
\item \href{#method-maplibReGL-add_lat_lng_grid}{\code{MaplibreMap$add_lat_lng_grid()}}
\item \href{#method-maplibReGL-hide_lat_lng_grid}{\code{MaplibreMap$hide_lat_lng_grid()}}
\item \href{#method-maplibReGL-show_lat_lng_grid}{\code{MaplibreMap$show_lat_lng_grid()}}
\item \href{#method-maplibReGL-add_cursor_coords_control}{\code{MaplibreMap$add_cursor_coords_control()}}
\item \href{#method-maplibReGL-add_draw_control}{\code{MaplibreMap$add_draw_control()}}
\item \href{#method-maplibReGL-add_custom_control}{\code{MaplibreMap$add_custom_control()}}
\item \href{#method-maplibReGL-delete_drawn_shape}{\code{MaplibreMap$delete_drawn_shape()}}
\item \href{#method-maplibReGL-hide_draw_controls}{\code{MaplibreMap$hide_draw_controls()}}
\item \href{#method-maplibReGL-show_draw_controls}{\code{MaplibreMap$show_draw_controls()}}
\item \href{#method-maplibReGL-add_layer}{\code{MaplibreMap$add_layer()}}
\item \href{#method-maplibReGL-hide_layer}{\code{MaplibreMap$hide_layer()}}
\item \href{#method-maplibReGL-show_layer}{\code{MaplibreMap$show_layer()}}
\item \href{#method-maplibReGL-set_paint_property}{\code{MaplibreMap$set_paint_property()}}
\item \href{#method-maplibReGL-set_layout_property}{\code{MaplibreMap$set_layout_property()}}
\item \href{#method-maplibReGL-toggle_clustering}{\code{MaplibreMap$toggle_clustering()}}
\item \href{#method-maplibReGL-clone}{\code{MaplibreMap$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-new"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$new(
  center = c(174, -41),
  zoom = 2,
  width = "100\%",
  height = "100\%",
  elementId = NULL,
  props = list(),
  session = shiny::getDefaultReactiveDomain()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{center}}{Numeric vector of length 2, map center (lon, lat).}

\item{\code{zoom}}{Initial zoom level.}

\item{\code{width}}{Map width.}

\item{\code{height}}{Map height.}

\item{\code{elementId}}{HTML element ID.}

\item{\code{props}}{List of map properties.}

\item{\code{session}}{Shiny session object.
Set API keys for various map services.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_mapTiler_api_key"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_mapTiler_api_key}{}}}
\subsection{Method \code{set_mapTiler_api_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_mapTiler_api_key(api_key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_key}}{The API key to set.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{   NULL
}\if{html}{\out{</div>}}

Set API key for ArcGIS services.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_arcGis_api_key"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_arcGis_api_key}{}}}
\subsection{Method \code{set_arcGis_api_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_arcGis_api_key(api_key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_key}}{The API key to set.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{   NULL
}\if{html}{\out{</div>}}

Set API key for Mapbox services.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_mapbox_api_key"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_mapbox_api_key}{}}}
\subsection{Method \code{set_mapbox_api_key()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_mapbox_api_key(api_key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_key}}{The API key to set.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{   NULL
}\if{html}{\out{</div>}}

Set the tile layer for the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_tile_layer"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_tile_layer}{}}}
\subsection{Method \code{set_tile_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_tile_layer(tiles)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tiles}}{A character vector of tile layer names.
Options include "natgeo", "satellite", "topo", "terrain",
"streets", "shaded", "light-grey".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{ NULL
}\if{html}{\out{</div>}}

Set the map zoom level.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_zoom"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_zoom}{}}}
\subsection{Method \code{set_zoom()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_zoom(zoom)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zoom}}{The zoom level to set. Default is 2.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{ NULL
}\if{html}{\out{</div>}}

Set the map bounds.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_bounds"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_bounds}{}}}
\subsection{Method \code{set_bounds()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_bounds(bounds, padding = 50, maxZoom = self$maxZoom)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bounds}}{A list of two lists, each containing longitude and latitude pairs.
For example: \code{list(list(-79, 43), list(-73, 45))}.}

\item{\code{padding}}{The padding around the bounds in pixels. Default is 50.}

\item{\code{maxZoom}}{The maximum zoom level to set. Default is the object's \code{maxZoom}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{   NULL
}\if{html}{\out{</div>}}

Get the UI for the map widget.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-ui"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-ui}{}}}
\subsection{Method \code{ui()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$ui()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The HTML widget for the map.
Add a source to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_source"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_source}{}}}
\subsection{Method \code{add_source()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_source(source_id, data, type = "geojson", cluster = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source_id}}{The ID for the source.}

\item{\code{data}}{The data for the source, typically in GeoJSON format.}

\item{\code{type}}{The type of the source. Default is \code{"geojson"}.
Other options include \code{"vector"} or \code{"raster"}.}

\item{\code{cluster}}{Whether to enable clustering for this source. Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Add a FeatureServer source to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_feature_server_source"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_feature_server_source}{}}}
\subsection{Method \code{add_feature_server_source()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_feature_server_source(source_url, source_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source_url}}{The URL of the FeatureServer source.}

\item{\code{source_id}}{The ID for the source.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{       NULL
}\if{html}{\out{</div>}}

Add an image source to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_image"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_image}{}}}
\subsection{Method \code{add_image()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_image(image_name, image_url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{image_name}}{The name of the image source.}

\item{\code{image_url}}{The URL of the image to add.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{       NULL
}\if{html}{\out{</div>}}

Set data for a source on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_source_data"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_source_data}{}}}
\subsection{Method \code{set_source_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_source_data(source_id, data, type = "geojson")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source_id}}{The ID of the source to update.}

\item{\code{data}}{The data for the source, typically in GeoJSON format.}

\item{\code{type}}{The type of the source. Default is \code{"geojson"}.
Other options include \code{"vector"} or \code{"raster"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Add a grid of latitude and longitude lines to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_lat_lng_grid"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_lat_lng_grid}{}}}
\subsection{Method \code{add_lat_lng_grid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_lat_lng_grid(grid_colour = "#000000")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{grid_colour}}{The colour of the grid lines. Default is \code{"#000000"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{       NULL
}\if{html}{\out{</div>}}

Hide the latitude and longitude grid on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-hide_lat_lng_grid"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-hide_lat_lng_grid}{}}}
\subsection{Method \code{hide_lat_lng_grid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$hide_lat_lng_grid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
Show the latitude and longitude grid on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-show_lat_lng_grid"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-show_lat_lng_grid}{}}}
\subsection{Method \code{show_lat_lng_grid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$show_lat_lng_grid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
Add a cursor coordinates control to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_cursor_coords_control"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_cursor_coords_control}{}}}
\subsection{Method \code{add_cursor_coords_control()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_cursor_coords_control(
  position = "bottom-left",
  long_label = "Lng",
  lat_label = "Lat"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{position}}{The position of the cursor coordinates control on the map.
Default is \code{"bottom-left"}.
Options include "top-left", "top-right", "bottom-left", "bottom-right".}

\item{\code{long_label}}{The label for the longitude coordinate. Default is \code{"Lng"}.}

\item{\code{lat_label}}{The label for the latitude coordinate. Default is \code{"Lat"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Add a draw control to the map
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_draw_control"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_draw_control}{}}}
\subsection{Method \code{add_draw_control()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_draw_control(
  position = "top-right",
  modes = c("polygon", "trash"),
  active_colour = "#0FB3CE",
  inactive_colour = "#0FB3CE",
  mode_labels = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{position}}{The position of the draw control on the map. Default is \code{"top-right"}.
Options are "top-left", "top-right", "bottom-left", "bottom-right".}

\item{\code{modes}}{A vector of modes to enable in the draw control.
Default is \code{c("polygon", "trash")}.
Options include "polygon", "trash", "line".}

\item{\code{active_colour}}{The colour for the drawn shapes. Default is \code{"#0FB3CE"}.}

\item{\code{inactive_colour}}{The colour for the inactive shapes. Default is \code{"#0FB3CE"}.}

\item{\code{mode_labels}}{A named list of labels for each mode.
For example, \code{list(polygon = "Draw Polygon", trash = "Delete Shape")}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Add a custom HTML control to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_custom_control"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_custom_control}{}}}
\subsection{Method \code{add_custom_control()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_custom_control(html, position = "top-right")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{html}}{The HTML content to add as a control.}

\item{\code{position}}{The position of the control on the map. Default is \code{"top-right"}.
Options include "top-left", "top-right", "bottom-left", "bottom-right".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Delete a drawn shape from the map.

The ID of the shape is provided by the draw control when a shape is created.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-delete_drawn_shape"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-delete_drawn_shape}{}}}
\subsection{Method \code{delete_drawn_shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$delete_drawn_shape(shape_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{shape_id}}{The ID of the shape to delete.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{    NULL
}\if{html}{\out{</div>}}

Hide the draw controls on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-hide_draw_controls"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-hide_draw_controls}{}}}
\subsection{Method \code{hide_draw_controls()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$hide_draw_controls()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
Show the draw controls on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-show_draw_controls"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-show_draw_controls}{}}}
\subsection{Method \code{show_draw_controls()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$show_draw_controls()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
Add a layer to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-add_layer"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-add_layer}{}}}
\subsection{Method \code{add_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$add_layer(
  layer_options,
  can_cluster = FALSE,
  popup_column = NULL,
  hover_column = NULL,
  on_feature_click = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_options}}{A list of options for the layer, including \code{id}, \code{type}, \code{source}, and any paint or layout properties.}

\item{\code{can_cluster}}{Whether the layer can be clustered. Default is \code{FALSE}.}

\item{\code{popup_column}}{The column name to use for popups. Default is \code{NULL}.}

\item{\code{hover_column}}{The column name to use for hover effects. Default is \code{NULL}.}

\item{\code{on_feature_click}}{Whether to enable click events on features. Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{             NULL
}\if{html}{\out{</div>}}

Hide a layer from the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-hide_layer"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-hide_layer}{}}}
\subsection{Method \code{hide_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$hide_layer(layer_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{The ID of the layer to hide.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-show_layer"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-show_layer}{}}}
\subsection{Method \code{show_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$show_layer(layer_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{The ID of the layer to show.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}

Set a paint property for a layer on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_paint_property"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_paint_property}{}}}
\subsection{Method \code{set_paint_property()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_paint_property(layer_id, property_name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{The ID of the layer to update.}

\item{\code{property_name}}{The name of the paint property to set.}

\item{\code{value}}{The value to set for the paint property.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{         NULL
}\if{html}{\out{</div>}}

Set a layout property for a layer on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-set_layout_property"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-set_layout_property}{}}}
\subsection{Method \code{set_layout_property()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$set_layout_property(layer_id, property_name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{The ID of the layer to update.}

\item{\code{property_name}}{The name of the layout property to set.}

\item{\code{value}}{The value to set for the layout property.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{         NULL
}\if{html}{\out{</div>}}

Toggle clustering for a layer on the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-toggle_clustering"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-toggle_clustering}{}}}
\subsection{Method \code{toggle_clustering()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$toggle_clustering(layer_id, cluster = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{The ID of the layer to toggle clustering for.}

\item{\code{cluster}}{Whether to enable clustering. Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{     NULL
}\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-maplibReGL-clone"></a>}}
\if{latex}{\out{\hypertarget{method-maplibReGL-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MaplibreMap$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
